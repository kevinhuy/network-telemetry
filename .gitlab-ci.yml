stages:
  - build_env
  - syntax_check
  - docker_build
  - pre_deployment
  - deployment

cache:
  paths:
    - telemetry/
  policy: pull-push

build:
  stage: build_env
  tags:
  - build_env
  script:
  - sudo apt-get update && sudo apt-get upgrade -y
  - sudo apt-get install python3-pip -y
  - sudo pip3 install --upgrade pip
  - sudo pip3 install virtualenv
  - virtualenv telemetry
  - source telemetry/bin/activate

python:
  stage: syntax_check
  tags:
  - syntax_check
  script:
  - sudo pip3 install jinja2
  - sudo pip3 install credPass
  - sudo pip3 install influxdb
  - sudo pip3 install pylint
  - pylint --disable=too-many-locals --disable=invalid-name ping-probes/network_telemetry_ping.py
  - pylint --disable=too-many-locals --disable=invalid-name ping-probes/dashboard_provisioning.py
  - pylint --disable=too-many-locals --disable=invalid-name tcp-probes/network_telemetry_tcp.py
  - pylint --disable=too-many-locals --disable=invalid-name tcp-probes/dashboard_provisioning.py

yaml:
  stage: syntax_check
  tags:
  - syntax_check
  script:
  - sudo pip3 install yamllint
  - yamllint ping-probes/var/targets.yaml
  - yamllint tcp-probes/var/targets.yaml

json:
  stage: syntax_check
  tags:
  - syntax_check
  script:
  - sudo apt-get install nodejs-legacy -y
  - sudo apt-get install npm -y
  - sudo npm install jsonlint -g
  - jsonlint ping-probes/.credentials.json
  - jsonlint tcp-probes/.credentials.json

Dockerfile:
  stage: syntax_check
  tags:
  - syntax_check
  script:
  - wget -cO hadolint https://github.com/hadolint/hadolint/releases/download/v1.13.0/hadolint-Linux-x86_64
  - chmod +x hadolint
  - ./hadolint tcp-probes/Dockerfile
  - ./hadolint ping-probes/Dockerfile

docker build:
  stage: docker_build
  tags:
  - docker_build
  script:
  - sudo apt-get remove docker docker-engine docker.io -y
  - sudo apt-get install apt-transport-https ca-certificates curl software-properties-common -y
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo apt-key fingerprint 0EBFCD88
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update && sudo apt-get install docker-ce -y
  - echo $DOCKER_PASSWORD | sudo docker login -u=federico87 --password-stdin
  - sudo docker build ping-probes/ -t network_telemetry_ping:latest
  - sudo docker tag network_telemetry_ping federico87/network_telemetry_ping
  - sudo docker push federico87/network_telemetry_ping
  - sudo docker build tcp-probes/ -t network_telemetry_tcp:latest
  - sudo docker tag network_telemetry_tcp federico87/network_telemetry_tcp
  - sudo docker push federico87/network_telemetry_tcp

remove ping container:
  stage: pre_deployment
  tags:
  - deployment
  script:
  - ssh -i "~/.aws.pem" ec2-user@ec2-35-176-166-172.eu-west-2.compute.amazonaws.com "sudo docker rm -f ping"
  allow_failure: true

remove tcp container:
  stage: pre_deployment
  tags:
  - deployment
  script:
  - ssh -i "~/.aws.pem" ec2-user@ec2-35-176-166-172.eu-west-2.compute.amazonaws.com "sudo docker rm -f tcp"
  allow_failure: true

deploy new containers:
  stage: deployment
  tags:
  - deployment
  script:
  - ssh -i "~/.aws.pem" ec2-user@ec2-35-176-166-172.eu-west-2.compute.amazonaws.com "sudo docker run -d --name=ping --link db --restart=always federico87/network_telemetry_ping"
  - ssh -i "~/.aws.pem" ec2-user@ec2-35-176-166-172.eu-west-2.compute.amazonaws.com "sudo docker run -d --name=tcp --link db --restart=always federico87/network_telemetry_tcp"
  - ssh -i "~/.aws.pem" ec2-user@ec2-35-176-166-172.eu-west-2.compute.amazonaws.com "python3 ~/network-telemetry/ping-probes/dashboard-provisioning.py; \
    python3 ~/network-telemetry/tcp-probes/dashboard-provisioning.py"
